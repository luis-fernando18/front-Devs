Index.HTML:

<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Painel do Administrador</title>


  <!-- Fonte Inter -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">


  <!-- Ícones Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">


  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <header>
      <h1>Painel do Administrador</h1>
    </header>


    <!-- Seção de informações -->
    <section class="perfil-section">
      <h2>Informações da conta</h2>
      <div class="perfil-info">
        <div class="foto-perfil">
          <div class="foto" id="foto-preview"></div>
          <button class="btn-alterar-foto" id="btnAlterarFoto"><strong>Alterar foto</strong> </button>
          <input type="file" id="inputFoto" accept="image/*" style="display: none;" />
        </div>
        <div class="campos">
          <label>Nome</label>
          <input type="text" placeholder="Administrador" />
          <label>Nome da Loja</label>
          <input type="text" placeholder="Minha Loja Exemplo" />
          <label>CNPJ</label>
          <input type="text" placeholder="00.000.000/0000-00" />
          <label>E-mail</label>
          <input type="email" placeholder="admin@example.com" />
          <label>Telefone</label>
          <input type="text" placeholder="(00) 00000-0000" />
          <label>CEP</label>
          <input type="text" placeholder="00000-000" />
          <label>Endereço</label>
          <input type="text" placeholder="Rua, número, bairro..." />
        </div>
      </div>
    </section>


    <!-- Seção de alterar senha -->
    <section class="senha-section">
      <h2>Alterar senha</h2>


      <label>Senha atual</label>
      <div class="input-senha">
        <input type="password" id="senhaAtual" placeholder="Digite sua senha atual" />
        <button type="button" class="toggle-senha" data-alvo="senhaAtual">
          <svg class="icone-olho" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
        </button>
      </div>




      <label>Senha nova</label>
      <div class="input-senha">
        <input type="password" id="senhaNova" placeholder="Digite sua nova senha" />
        <button type="button" class="toggle-senha" data-alvo="senhaNova">
          <svg class="icone-olho" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
        </button>
      </div>
      <small id="senhaForcaTexto" class="senha-texto"></small>


      <label>Confirmar nova senha</label>
      <div class="input-senha">
        <input type="password" id="confirmaSenha" placeholder="Confirme sua nova senha" />
        <button type="button" class="toggle-senha" data-alvo="confirmaSenha">
          <svg class="icone-olho" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
        </button>
      </div>
      <small id="senhaConfirmaTexto" class="senha-texto"></small>
    </section>




    <!-- Gerenciamento de Produtos -->
    <section class="produtos-section">
      <h2>Gerenciamento de Produtos</h2>
      <button class="btn-cadastrar" id="abrirModalProduto">+ Cadastrar Novo Produto</button>


      <table>
        <thead>
          <tr>
            <th>Imagem</th>
            <th>Nome do Produto</th>
            <th>Preço</th>
            <th>Estoque</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody id="produtos-tabela">
          <!-- Produtos aparecerão aqui -->
        </tbody>
      </table>
    </section>


    <!-- MODAL CADASTRAR/EDITAR -->
    <div class="modal" id="modalProduto">
      <div class="modal-content">
        <span class="fechar" id="fecharModalProduto">&times;</span>
        <h3 id="tituloModalProduto">Cadastrar Novo Produto</h3>
        <form id="formProduto">
          <input type="hidden" id="produtoId">


          <label for="nomeProduto">Nome do Produto</label>
          <input type="text" id="nomeProduto" required>


          <label for="descricaoProduto">Descrição</label>
          <textarea id="descricaoProduto" rows="3" required></textarea>


          <label for="precoProduto">Preço</label>
          <input type="number" id="precoProduto" step="0.01" min="0" required>


          <label for="estoqueProduto">Estoque</label>
          <input type="number" id="estoqueProduto" min="0" required>


          <label for="imagemProduto">Imagem</label>
          <input type="file" id="imagemProduto" accept="image/*">


          <button type="submit" class="btn-primario">Salvar Produto</button>
        </form>
      </div>
    </div>


    <!-- Gerenciamento de Pedidos -->
<section class="pedidos-section">
  <h2>Gerenciamento de Pedidos</h2>
  <table>
    <thead>
      <tr>
        <th>ID do Pedido</th>
        <th>Data</th>
        <th>Cliente</th>
        <th>Valor Total</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody id="tabela-pedidos">
      <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td>
          <select>
            <option value="processando">Processando</option>
            <option value="enviado">Enviado</option>
            <option value="concluido">Concluído</option>
          </select>
        </td>
      </tr>
    </tbody>
  </table>
</section>


    <tbody id="tabela-pedidos">
      <!-- Preenchido dinamicamente via JS -->
    </tbody>
  </table>
</section>


    <!-- Botões -->
    <div class="botoes">
      <button class="btn-primario">Salvar Perfil</button>
      <button class="btn-secundario">Sair</button>
    </div>
  </div>


  <script src="script.js"></script>
</body>
</html>





Style.CSS:

/* Reset básico */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


body {
  font-family: 'Inter', sans-serif;
  background-color: #021724;
  padding: 20px;
}


.container {
  max-width: 800px;
  margin: 0 auto;
  background-color: #fffafc;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}


header {
  background-color: #E5993B;
  color: #021724;
  padding: 15px;
  border-radius: 8px 8px 0 0;
  text-align: center;
  margin-bottom: 25px;
}


h1 {
  font-size: 24px;
  font-weight: 700;
}


section {
  margin-bottom: 30px;
  padding-bottom: 20px;
}


section h2 {
  font-size: 18px;
  border-bottom: 2px solid #E5993B;
  margin-bottom: 10px;
  padding-bottom: 5px;
  font-weight: 600;
}


.perfil-info {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
}


.foto-perfil {
  text-align: center;
}


.foto {
  width: 100px;
  height: 100px;
  background-color: #ccc;
  border-radius: 50%;
  margin-bottom: 8px;
  background-size: cover;
  background-position: center;
}


.btn-alterar-foto {
  background-color: #E5993B;
  color: #021724;
  border: none;
  padding: 6px 12px;
  font-size: 14px;
  cursor: pointer;
  border-radius: 5px;
}


.campos {
  flex: 1;
  min-width: 250px;
}


label {
  display: block;
  margin-top: 10px;
  font-weight: 600;
}


input {
  width: 100%;
  padding: 10px 12px;
  margin-top: 0px;
  border: 1px solid rgb(161, 161, 161);
  border-radius: 6px;
}


input:disabled {
  background-color: #eee;
}


.botoes {
  display: flex;
  gap: 10px;
  justify-content: flex-end;
  margin-top: 20px;
}


.btn-primario {
  background-color: #E5993B;
  color: #021724;
  padding: 10px 16px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 600;
}


.btn-secundario {
  background-color: #E5993B;
  color: #021724;
  border: 2px solid #E5993B;
  padding: 10px 16px;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 600;
}


/* Campos de senha */
.input-senha {
  position: relative;
  display: flex;
  align-items: center;
}


.input-senha input {
  width: 100%;
  padding-right: 40px;
}


.toggle-senha {
  position: absolute;
  right: 8px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 5px;
}


.icone-olho {
  width: 20px;
  height: 20px;
  stroke: #555;
}


/* Estilos de força da senha */
.senha-fraca {
  border: 2px solid red !important;
}


.senha-media {
  border: 2px solid orange !important;
}


.senha-forte {
  border: 2px solid green !important;
}


/* Texto da força da senha */
.senha-texto {
  display: block;
  margin-top: 4px;
  font-size: 13px;
  font-weight: 600;
}


.senha-texto.fraca {
  color: red;
}


.senha-texto.media {
  color: orange;
}


.senha-texto.forte {
  color: green;
}


/* ===============================
   NOVA SEÇÃO - ADMIN USUÁRIOS
=================================*/
.usuarios-section {
  margin-top: 40px;
}


.usuarios-section table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 15px;
}


.usuarios-section th,
.usuarios-section td {
  padding: 10px;
  border: 1px solid #ccc;
  text-align: left;
}


.usuarios-section th {
  background-color: #E5993B;
  color: #021724;
}


.usuarios-section tr:nth-child(even) {
  background-color: #f9f9f9;
}


.acoes {
  display: flex;
  align-items: center;   /* Centraliza verticalmente os ícones */
  justify-content: center; /* Centraliza horizontalmente os ícones */
  gap: 10px;
}


.acoes button {
  background: none;
  border: none;
  cursor: pointer;
}


.acoes svg {
  width: 20px;
  height: 20px;
  stroke: #021724;
}


/* Estilo para tabelas */
table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 10px;
  background-color: #fff;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: 0 1px 4px rgba(0,0,0,0.1);
}


table th, table td {
  padding: 10px 12px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}


table th {
  background-color: #E5993B;
  color: #021724;
  font-weight: 600;
  font-size: 14px;
}


table tr:nth-child(even) {
  background-color: #f9f9f9;
}


table tr:hover {
  background-color: #f1f1f1;
}


/* Botão de editar (laranja no hover) */
.acao-btn.edit:hover svg {
  stroke: #E5993B;
}


/* Botão de deletar (vermelho no hover) */
.acao-btn.delete:hover svg {
  stroke: red;
}


/* Botão cadastrar novo produto */
.botoes-produtos {
  margin-bottom: 15px;
  text-align: right;
}


.botoes-produtos .btn-primario {
  background-color: #E5993B;
  color: #021724;
  padding: 8px 14px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 600;
  transition: background-color 0.3s;
}


.botoes-produtos .btn-primario:hover {
  background-color: #cf832a;
}


/* Botão cadastrar */
.btn-cadastrar {
  background-color: #E5993B;
  color: #021724;
  padding: 10px 16px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 600;
  margin-bottom: 15px;
  transition: 0.3s;
}


.btn-cadastrar:hover {
  background-color: #cf822f;
}


/* Modal */
.modal {
  display: none; /* escondido por padrão */
  position: fixed;
  z-index: 1000;
  left: 0; top: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  justify-content: center;
  align-items: center;
}


.modal-content {
  background: #fffafc;
  padding: 25px;
  border-radius: 10px;
  width: 400px;
  max-width: 90%;
  box-shadow: 0 2px 10px rgba(0,0,0,0.3);
  position: relative;
}


.modal-content h3 {
  margin-bottom: 15px;
}


.modal-content label {
  display: block;
  margin-top: 10px;
  font-weight: 600;
}


.modal-content input,
.modal-content textarea {
  width: 100%;
  padding: 8px;
  margin-top: 4px;
  border: 1px solid #ccc;
  border-radius: 4px;
}


/* remove setinhas dos inputs number */
.modal-content input[type=number]::-webkit-outer-spin-button,
.modal-content input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


/* Remove as setinhas de inputs type=number */
.modal-content input[type=number] {
  -moz-appearance: textfield;   /* Firefox */
}


.modal-content input[type=number]::-webkit-inner-spin-button,
.modal-content input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;     /* Chrome, Safari, Edge */
  margin: 0;
}


.modal-content button {
  margin-top: 15px;
  width: 100%;
}


.produtos-section table img {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 6px;
}


.fechar {
  position: absolute;
  top: 10px; right: 15px;
  font-size: 22px;
  cursor: pointer;
  color: #555;
}


.fechar:hover {
  color: red;
}


/* Ajuste definitivo para alinhar ícones de ações */
td.acoes {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px; /* espaçamento entre os ícones */
  height: 100%; /* garante que siga a altura da linha */
}


td.acoes button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 6px;
}


td.acoes svg,
td.acoes i {
  display: block;
  width: 20px;
  height: 20px;
  stroke: #021724;
  font-size: 18px;
  line-height: 1; /* remove desalinhamento vertical */
}


/* Hover: edição laranja, exclusão vermelha */
td.acoes .edit:hover svg,
td.acoes .edit:hover i {
  stroke: #E5993B;
  color: #E5993B;
}


td.acoes .delete:hover svg,
td.acoes .delete:hover i {
  stroke: red;
  color: red;
}




Script.JS:

// Trocar foto de perfil
const btnAlterarFoto = document.getElementById("btnAlterarFoto");
const inputFoto = document.getElementById("inputFoto");
const fotoPreview = document.getElementById("foto-preview");


btnAlterarFoto.addEventListener("click", () => {
  inputFoto.click();
});


inputFoto.addEventListener("change", () => {
  const file = inputFoto.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = (e) => {
      fotoPreview.style.backgroundImage = `url(${e.target.result})`;
      fotoPreview.style.backgroundSize = "cover";
      fotoPreview.style.backgroundPosition = "center";
    };
    reader.readAsDataURL(file);
  }
});


// SVGs originais para alternar senha
const svgOlhoAberto = `
<svg class="icone-olho" xmlns="http://www.w3.org/2000/svg" fill="none"
  viewBox="0 0 24 24" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
    d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268
    2.943 9.542 7-1.274 4.057-5.065 7-9.542
    7-4.477 0-8.268-2.943-9.542-7z" />
</svg>
`;


const svgOlhoFechado = `
<svg class="icone-olho" xmlns="http://www.w3.org/2000/svg" fill="none"
  viewBox="0 0 24 24" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
    d="M13.875 18.825A10.05 10.05 0 0112 19c-4.477
    0-8.268-2.943-9.542-7a10.05 10.05 0
    012.153-3.592M6.634 6.634A9.956 9.956 0
    0112 5c4.477 0 8.268 2.943 9.542
    7-.458 1.459-1.241 2.763-2.247
    3.802M15 12a3 3 0 01-3 3m0-6a3 3
    0 013 3m-6 0a3 3 0 003-3m0 6v.01" />
  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
    d="M3 3l18 18" />
</svg>
`;


// Alternar mostrar/ocultar senha
document.querySelectorAll(".toggle-senha").forEach(botao => {
  botao.addEventListener("click", () => {
    const campoId = botao.getAttribute("data-alvo");
    const campo = document.getElementById(campoId);


    if (campo.type === "password") {
      campo.type = "text";
      botao.innerHTML = svgOlhoFechado;
    } else {
      campo.type = "password";
      botao.innerHTML = svgOlhoAberto;
    }
  });
});


// Verificar força da senha
function verificarForcaSenha(senha) {
  let forca = 0;
  if (senha.length >= 6) forca++;
  if (/[A-Z]/.test(senha)) forca++;
  if (/[a-z]/.test(senha)) forca++;
  if (/[0-9]/.test(senha)) forca++;
  if (/[@~$!=%*?_&"'-+#¨^:;<>,.{})()]/.test(senha)) forca++;
  return forca;
}


// Aplica cor e texto ao campo
const senhaNovaInput = document.getElementById("senhaNova");
const senhaTexto = document.getElementById("senhaForcaTexto");


senhaNovaInput.addEventListener("input", () => {
  const valor = senhaNovaInput.value;
  const forca = verificarForcaSenha(valor);


  senhaNovaInput.classList.remove("senha-fraca", "senha-media", "senha-forte");
  senhaTexto.classList.remove("fraca", "media", "forte");
  senhaTexto.textContent = "";


  if (valor.length === 0) return;


  if (forca <= 2) {
    senhaNovaInput.classList.add("senha-fraca");
    senhaTexto.textContent = "Senha fraca";
    senhaTexto.classList.add("fraca");
  } else if (forca === 3 || forca === 4) {
    senhaNovaInput.classList.add("senha-media");
    senhaTexto.textContent = "Senha média";
    senhaTexto.classList.add("media");
  } else if (forca === 5) {
    senhaNovaInput.classList.add("senha-forte");
    senhaTexto.textContent = "Senha forte";
    senhaTexto.classList.add("forte");
  }
});


// Validação de confirmação de senha
const confirmaSenhaInput = document.getElementById("confirmaSenha");
const senhaConfirmaTexto = document.getElementById("senhaConfirmaTexto");


function validarConfirmacaoSenha() {
  senhaConfirmaTexto.textContent = "";
  senhaConfirmaTexto.classList.remove("fraca", "forte");
  confirmaSenhaInput.classList.remove("senha-fraca", "senha-forte");


  if (confirmaSenhaInput.value === "") {
    confirmaSenhaInput.style.border = "1px solid #ccc";
    return;
  }


  if (confirmaSenhaInput.value === senhaNovaInput.value) {
    confirmaSenhaInput.classList.add("senha-forte");
    senhaConfirmaTexto.textContent = "Senhas coincidem";
    senhaConfirmaTexto.classList.add("forte");
  } else {
    confirmaSenhaInput.classList.add("senha-fraca");
    senhaConfirmaTexto.textContent = "Senhas não coincidem";
    senhaConfirmaTexto.classList.add("fraca");
  }
}


confirmaSenhaInput.addEventListener("input", validarConfirmacaoSenha);
senhaNovaInput.addEventListener("input", validarConfirmacaoSenha);


// Variável global para saber se estamos editando ou cadastrando
let editandoLinha = null;


// Abrir e fechar modal
const abrirModalBtn = document.getElementById("abrirModalProduto");
const modal = document.getElementById("modalProduto");
const fecharModalBtn = document.getElementById("fecharModalProduto");
const tabelaProdutos = document.getElementById("produtos-tabela");


abrirModalBtn.addEventListener("click", () => {
  editandoLinha = null;
  document.getElementById("formProduto").reset();
  modal.style.display = "flex";
});


fecharModalBtn.addEventListener("click", () => {
  modal.style.display = "none";
});


window.addEventListener("click", (e) => {
  if (e.target === modal) {
    modal.style.display = "none";
  }
});


// Submeter formulário
document.getElementById("formProduto").addEventListener("submit", function(e) {
  e.preventDefault();


  const nome = document.getElementById("nomeProduto").value;
  const descricao = document.getElementById("descricaoProduto").value;
  const preco = parseFloat(document.getElementById("precoProduto").value);
  const estoque = parseInt(document.getElementById("estoqueProduto").value);
  const imagemInput = document.getElementById("imagemProduto").files[0];


  if (isNaN(preco) || isNaN(estoque)) {
    alert("Por favor, insira valores válidos para preço e estoque.");
    return;
  }


  const atualizarTabela = (imagemBase64) => {
    if (editandoLinha) {
      editandoLinha.querySelector("td:nth-child(1) img").src =
        imagemBase64 || editandoLinha.querySelector("td:nth-child(1) img").src;
      editandoLinha.querySelector("td:nth-child(2)").textContent = nome;
      editandoLinha.querySelector("td:nth-child(3)").textContent = `R$ ${preco.toFixed(2)}`;
      editandoLinha.querySelector("td:nth-child(4)").textContent = estoque;
    } else {
      const novaLinha = document.createElement("tr");
      novaLinha.innerHTML = `
        <td><img src="${imagemBase64}" alt="${nome}"></td>
        <td>${nome}</td>
        <td>R$ ${preco.toFixed(2)}</td>
        <td>${estoque}</td>
        <td class="acoes">
          <button class="editar"><i class="fas fa-edit"></i></button>
          <button class="excluir"><i class="fas fa-trash"></i></button>
        </td>
      `;
      tabelaProdutos.appendChild(novaLinha);
      adicionarEventosAcoes(novaLinha);
    }


    modal.style.display = "none";
    e.target.reset();
    editandoLinha = null;
  };


  if (imagemInput) {
    const reader = new FileReader();
    reader.onload = function(event) {
      atualizarTabela(event.target.result);
    };
    reader.readAsDataURL(imagemInput);
  } else {
    atualizarTabela(null);
  }
});


// Função para adicionar eventos de editar/excluir
function adicionarEventosAcoes(linha) {
  const btnEditar = linha.querySelector(".editar");
  const btnExcluir = linha.querySelector(".excluir");


  btnEditar.addEventListener("click", () => {
    editandoLinha = linha;
    document.getElementById("nomeProduto").value = linha.querySelector("td:nth-child(2)").textContent;
    document.getElementById("precoProduto").value = linha.querySelector("td:nth-child(3)").textContent.replace("R$ ", "").replace(",", ".");
    document.getElementById("estoqueProduto").value = linha.querySelector("td:nth-child(4)").textContent;
    document.getElementById("descricaoProduto").value = "Descrição simulada (pode vir do backend)";
    modal.style.display = "flex";
  });


  btnExcluir.addEventListener("click", () => {
    if (confirm("Tem certeza que deseja excluir este produto?")) {
      linha.remove();
    }
  });
}


// Ativar eventos nas linhas já existentes
document.querySelectorAll("#produtos-tabela tr").forEach(adicionarEventosAcoes);


// Renderizar pedidos na tabela
function renderizarPedidos(listaPedidos = []) {
  tabelaPedidos.innerHTML = "";
  listaPedidos.forEach((pedido) => {
    const row = document.createElement("tr");
    row.innerHTML = `
      <td>${pedido.id}</td>
      <td>${pedido.data}</td>
      <td>${pedido.cliente}</td>
      <td>${pedido.total}</td>
      <td>${pedido.status}</td>
      <td>
        <button class="btn-acao editar" onclick="editarPedido(${pedido.id})">
          <i class="fa-solid fa-pen"></i>
        </button>
      </td>
    `;
    tabelaPedidos.appendChild(row);
  });
}


